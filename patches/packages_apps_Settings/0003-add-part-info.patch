From ae687a1e0f9f326bf4ffd687ca46811276f98641 Mon Sep 17 00:00:00 2001
From: Konsta <konsta09@gmail.com>
Date: Tue, 18 Dec 2012 15:27:40 +0200
Subject: [PATCH 1/8] add partition info

Change-Id: I5a01f913f5d0eca04cbe54175e8fa72cb6418f77
---
 res/values/cm_strings.xml                          |    8 ++
 res/xml/partition_info.xml                         |   39 ++++++++
 res/xml/settings_headers.xml                       |    7 ++
 src/com/android/settings/Settings.java             |    3 +
 .../settings/cyanogenmod/PartitionInfo.java        |  100 ++++++++++++++++++++
 5 files changed, 157 insertions(+)
 create mode 100644 res/xml/partition_info.xml
 create mode 100644 src/com/android/settings/cyanogenmod/PartitionInfo.java

diff --git a/res/values/cm_strings.xml b/res/values/cm_strings.xml
index 4915801..969c820 100644
--- a/res/values/cm_strings.xml
+++ b/res/values/cm_strings.xml
@@ -15,6 +15,14 @@
      limitations under the License.
 -->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
+    <!-- Partition info -->
+    <string name="partition_info_title">Partition info</string>
+    <string name="partition_info_system">/system</string>
+    <string name="partition_info_data">/data</string>
+    <string name="partition_info_cache">/cache</string>
+    <string name="partition_info_sdcard">/sdcard</string>
+    <string name="partition_info_sdext">EXT partition</string>
+
     <!-- Wi-Fi region code -->
     <string name="wifi_setting_countrycode_title">Wi\u2011Fi region code</string>
     <!-- Wi-Fi settings screen, setting summary for setting the wifi frequency band [CHAR LIMIT=50]-->
diff --git a/res/xml/partition_info.xml b/res/xml/partition_info.xml
new file mode 100644
index 0000000..8ffa4a6
--- /dev/null
+++ b/res/xml/partition_info.xml
@@ -0,0 +1,39 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2008 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+
+<PreferenceScreen xmlns:android="http://schemas.android.com/apk/res/android"
+        android:title="@string/partition_info_title">
+    <!-- /system -->
+    <Preference android:key="system_partition_info"
+        android:title="@string/partition_info_system"
+        android:summary="@string/status_unavailable" />
+    <!-- /data -->
+    <Preference android:key="data_partition_info"
+        android:title="@string/partition_info_data"
+        android:summary="@string/status_unavailable" />
+    <!-- /cache -->
+    <Preference android:key="cache_partition_info"
+        android:title="@string/partition_info_cache"
+        android:summary="@string/status_unavailable" />
+    <!-- /sdcard -->
+    <Preference android:key="sdcard_partition_info"
+        android:title="@string/partition_info_sdcard"
+        android:summary="@string/status_unavailable" />
+    <!-- EXT -->
+    <Preference android:key="sdext_partition_info"
+        android:title="@string/partition_info_sdext"
+        android:summary="@string/status_unavailable" />
+</PreferenceScreen>
diff --git a/res/xml/settings_headers.xml b/res/xml/settings_headers.xml
index 1a6d3fb..a10dfc2 100644
--- a/res/xml/settings_headers.xml
+++ b/res/xml/settings_headers.xml
@@ -170,6 +170,13 @@
         android:icon="@drawable/ic_settings_storage"
         android:title="@string/storage_settings" />
 
+    <!-- Partition info -->
+    <header
+        android:id="@+id/partition_info"
+        android:icon="@drawable/ic_settings_data_usage"
+        android:fragment="com.android.settings.cyanogenmod.PartitionInfo"
+        android:title="@string/partition_info_title" />
+
     <!-- Battery -->
     <header
         android:id="@+id/battery_settings"
diff --git a/src/com/android/settings/Settings.java b/src/com/android/settings/Settings.java
index 81b8cf6..31eec44 100644
--- a/src/com/android/settings/Settings.java
+++ b/src/com/android/settings/Settings.java
@@ -91,6 +91,7 @@ import com.android.settings.cyanogenmod.ButtonSettings;
 import com.android.settings.cyanogenmod.LockscreenInterface;
 import com.android.settings.cyanogenmod.NavBar;
 import com.android.settings.cyanogenmod.NavRing;
+import com.android.settings.cyanogenmod.PartitionInfo;
 import com.android.settings.cyanogenmod.PerformanceSettings;
 import com.android.settings.cyanogenmod.StatusBar;
 import com.android.settings.cyanogenmod.NotificationDrawer;
@@ -189,6 +190,7 @@ public class Settings extends PreferenceActivity
             R.id.sound_settings,
             R.id.display_settings,
             R.id.storage_settings,
+            R.id.partition_info,
             R.id.application_settings,
             R.id.battery_settings,
             R.id.personal_section,
@@ -486,6 +488,7 @@ public class Settings extends PreferenceActivity
         StatusBar.class.getName(),
         NotificationDrawer.class.getName(),
         ButtonSettings.class.getName(),
+        PartitionInfo.class.getName(),
         ProfilesSettings.class.getName(),
         PerformanceSettings.class.getName(),
         PolicyNativeFragment.class.getName(),
diff --git a/src/com/android/settings/cyanogenmod/PartitionInfo.java b/src/com/android/settings/cyanogenmod/PartitionInfo.java
new file mode 100644
index 0000000..f148c6d
--- /dev/null
+++ b/src/com/android/settings/cyanogenmod/PartitionInfo.java
@@ -0,0 +1,100 @@
+/*
+ * Copyright (C) 2008 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.android.settings.cyanogenmod;
+
+import android.os.Bundle;
+import android.os.StatFs;
+import android.preference.Preference;
+import android.preference.PreferenceScreen;
+import android.text.format.Formatter;
+
+import com.android.settings.R;
+import com.android.settings.SettingsPreferenceFragment;
+
+import java.io.File;
+
+public class PartitionInfo extends SettingsPreferenceFragment {
+    private static final String SYSTEM_SIZE = "system_partition_info";
+    private static final String DATA_SIZE = "data_partition_info";
+    private static final String CACHE_SIZE = "cache_partition_info";
+    private static final String SDCARD_SIZE = "sdcard_partition_info";
+    private static final String SDEXT_SIZE = "sdext_partition_info";
+
+    private Preference mSystemSize;
+    private Preference mDataSize;
+    private Preference mCacheSize;
+    private Preference mSdcardSize;
+    private Preference mSdextSize;
+
+    @Override
+    public void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+
+        addPreferencesFromResource(R.xml.partition_info);
+
+        PreferenceScreen prefSet = getPreferenceScreen();
+
+        mSystemSize = (Preference) prefSet.findPreference(SYSTEM_SIZE);
+        mDataSize = (Preference) prefSet.findPreference(DATA_SIZE);
+        mCacheSize = (Preference) prefSet.findPreference(CACHE_SIZE);
+        mSdcardSize = (Preference) prefSet.findPreference(SDCARD_SIZE);
+        mSdextSize = (Preference) prefSet.findPreference(SDEXT_SIZE);
+
+        try {
+            mSystemSize.setSummary(obtainPartitionSize("/system"));
+            mDataSize.setSummary(obtainPartitionSize("/data"));
+            mCacheSize.setSummary(obtainPartitionSize("/cache"));
+            mSdcardSize.setSummary(obtainPartitionSize("/sdcard"));
+
+            if (fileExists("/dev/block/mmcblk1p2") == true) {
+                if (fileExists("/sd-ext") == true) {
+                    mSdextSize.setTitle("/sd-ext (EXT)");
+                    mSdextSize.setSummary(obtainPartitionSize("/sd-ext"));
+                } else if (fileExists("/data/sdext2") == true) {
+                    mSdextSize.setTitle("/data/sdext2 (EXT)");
+                    mSdextSize.setSummary(obtainPartitionSize("/data/sdext2"));
+                } else if (fileExists("/system/sd") == true) {
+                    mSdextSize.setTitle("/system/sd (EXT)");
+                    mSdextSize.setSummary(obtainPartitionSize("/system/sd"));
+                }
+            } else {
+                prefSet.removePreference(findPreference(SDEXT_SIZE));
+            }
+
+        } catch (IllegalArgumentException e) {
+            e.printStackTrace();
+        }
+    }
+
+    private String obtainPartitionSize(String partitionPath) {
+        String retStr;
+        File extraPath = new File(partitionPath);
+        StatFs extraStat = new StatFs(extraPath.getPath());
+        long blockSize = extraStat.getBlockSize();
+        long availableBlocks = extraStat.getAvailableBlocks();
+        long totalBlocks = extraStat.getBlockCount();
+        retStr = Formatter.formatFileSize(getActivity(), (totalBlocks * blockSize) - (availableBlocks * blockSize));
+        retStr += " / ";
+        retStr += Formatter.formatFileSize(getActivity(), totalBlocks * blockSize);
+        return retStr;
+    }
+
+    private boolean fileExists(String filename) {
+        File f = new File(filename);
+        return f.exists();
+    }
+}
-- 
1.7.9.5

